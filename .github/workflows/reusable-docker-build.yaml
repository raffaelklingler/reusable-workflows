name: Docker Build and Push (rwf)

on:
  workflow_call:
    inputs:
      context:
        description: Context path to start build from
        required: false
        type: string
      dockerfile:
        description: Dockerfile to use, relative to context path
        required: false
        type: string
      image-names:
        description: List of image names to push
        required: false
        type: string
        default: |
          ghcr.io/${{ github.repository }}
      pr-comment:
        description: Whether to create a PR comment with pushed image tags
        required: false
        default: true
        type: boolean
      push:
        description: Whether to push image tags
        required: false
        type: boolean
        default: true
      tag-rules:
        # https://github.com/marketplace/actions/docker-metadata-action#tags-input
        description: Determine image tags based on a key-value pair list in CSV format
        required: false
        type: string
        # Create image tag "stable-<date>-<commit-hash>" on push to default branch
        # Create image tag "latest" on push to default branch
        # Create image tag "gha-<gha-run-id>" on PR
        # Create image tag "pr-<pr-id>" on PR
        default: |
          type=raw,value=stable-{{date 'YYYYMMDD'}}-{{sha}},enable={{is_default_branch}},priority=300
          type=raw,value=latest,enable={{is_default_branch}},priority=100
          type=raw,value=gha-${{ github.run_id }},enable=${{github.event_name == 'pull_request'}},priority=200
          type=ref,event=pr,priority=100
    outputs:
      image-tag:
        description: single-use image tag for GHA runs (TODO)
        value: ${{ jobs.build-image.outputs.image-tag }}

permissions:
  contents: read
  packages: write # needed to push docker image to ghcr.io
  pull-requests: write # needed to create and update comments in PRs

jobs:
  build-image:
    name: Docker Build and Push (rwfj)
    runs-on: ubuntu-latest

    outputs:
      # only outputs the unique gha- image tag that is unique to each GHA run
      image-tag: ${{ steps.image-tag.outputs.image-tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: docker-buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Log in to GHCR
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Metadata
        id: docker-metadata
        uses: docker/metadata-action@v5.8.0
        with:
          images: ${{ inputs.image-names }}
          tags: ${{ inputs.tag-rules }}

      - name: Docker Build and Push
        uses: docker/build-push-action@v6.18.0
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.file }}
          target: ${{ inputs.target }}
          platforms: linux/amd64
          builder: ${{ steps.docker-buildx.outputs.name }}
          # use github actions cache for faster builds
          # https://docs.docker.com/build/ci/github-actions/cache/
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ inputs.push }}
          tags: ${{ steps.docker-metadata.outputs.tags }}
          labels: ${{ steps.docker-metadata.outputs.labels }}

        # If PR, put image tags in the PR comments
        # from https://github.com/marketplace/actions/create-or-update-comment
      - name: Find existing PR comment with pushed image tags
        id: find-comment
        uses: peter-evans/find-comment@v3.1.0
        if: github.event_name == 'pull_request' && inputs.pr-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: github-actions[bot]
          body-includes: Docker image tag(s) pushed

        # If PR, put image tags in the PR comments
      - name: Create or update PR comment with pushed image tags
        uses: peter-evans/create-or-update-comment@v4.0.0
        if: github.event_name == 'pull_request' && inputs.pr-comment
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Image tags pushed:
            ```text
            ${{ steps.docker-metadata.outputs.tags }}
            ```

            Labels added to images (TODO: remove probably):
            ```text
            ${{ steps.docker-metadata.outputs.labels }}
            ```
          edit-mode: replace

        # for dependent jobs, we need to output the unique tag for this GHA run
        # based on the docker-metadata tag priority rules, the highest priority tag
        # will be sent to this output
        # this step output is sent to job output, which is sent to workflow output
        # use this tag in another job with needs.<job-name>.outputs.image-tag
      - name: Find the primary image tag we just pushed, and output it
        id: image-tag
        run: echo "image-tag=${{ steps.docker-metadata.outputs.version }}" >> $GITHUB_OUTPUT
